<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vmware on Live and let Learn</title>
    <link>https://liveandletlearn.net/tags/vmware/</link>
    <description>Recent content in Vmware on Live and let Learn</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 May 2022 15:38:13 +1000</lastBuildDate>
    <atom:link href="https://liveandletlearn.net/tags/vmware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fan-Out and Fan-In Golang channels in Kubeapps</title>
      <link>https://liveandletlearn.net/post/fan-out-fan-in-golang-kubeapps/</link>
      <pubDate>Fri, 20 May 2022 15:38:13 +1000</pubDate>
      <guid>https://liveandletlearn.net/post/fan-out-fan-in-golang-kubeapps/</guid>
      <description>&lt;p&gt;During a career as a software engineer, every now and then you come across a &lt;a href=&#34;https://en.wikipedia.org/wiki/Software_design_pattern&#34;&gt;design pattern&lt;/a&gt; that becomes your darling for a few years following the discovery. Other design patterns are useful, but not so special that you want to tell the world about them.&lt;/p&gt;&#xA;&lt;p&gt;Up until recently, my favourite design pattern was the &lt;a href=&#34;https://en.wikipedia.org/wiki/State_pattern&#34;&gt;state pattern&lt;/a&gt; which allows encapsulating different behaviours (implementations of an interface) in different classes so that an object can delegate its functionality to different state implementations which can be update at runtime. But more recently, while using a lot of concurrency in certain &lt;a href=&#34;https://github.com/vmware-tanzu/kubeapps/&#34;&gt;Kubeapps&lt;/a&gt; services, I&amp;rsquo;ve fallen in love with another design pattern - the fan-out/fan-in messaging pattern (or a form of it).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubeapps APIs - a plugable system supporting different Kubernetes packages</title>
      <link>https://liveandletlearn.net/post/kubeapps-apis-kubernetes-packages/</link>
      <pubDate>Wed, 16 Feb 2022 10:22:30 +1100</pubDate>
      <guid>https://liveandletlearn.net/post/kubeapps-apis-kubernetes-packages/</guid>
      <description>&lt;p&gt;The recent release of Kubeapps marks a milestone for the Kubeapps team in that we are &lt;strong&gt;no longer restricted to presenting a catalog of only Helm packages&lt;/strong&gt; in our UI and, behind the scenes, we&amp;rsquo;ve addressed a &lt;a href=&#34;https://github.com/vmware-tanzu/kubeapps/issues/3896&#34;&gt;long-standing security issue&lt;/a&gt; to &lt;strong&gt;remove the reverse proxy to the Kubernetes API server&lt;/strong&gt; that our UI depended on until now. We&amp;rsquo;ve done a few overviews of the new &lt;strong&gt;Kubeapps APIs&lt;/strong&gt; service which makes this possible (see &lt;a href=&#34;https://www.youtube.com/watch?v=_4F5uE0ikF8&#34;&gt;Kubeapps APIs: Beyond Helm&lt;/a&gt;, or the &lt;a href=&#34;https://www.youtube.com/watch?v=rS2AhcIPQEs&#34;&gt;TanzuTV episode 74&lt;/a&gt; where Antonio gives an in-depth demo of the Carvel support), or more recently, a demo of the Flux and Carvel support together: &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/Gv2rDP51EtE?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubeapps on Tanzu Kubernetes Grid 1.3</title>
      <link>https://liveandletlearn.net/post/kubeapps-on-tanzu-kubernetes-grid-13-part-2/</link>
      <pubDate>Mon, 19 Apr 2021 21:39:49 +1000</pubDate>
      <guid>https://liveandletlearn.net/post/kubeapps-on-tanzu-kubernetes-grid-13-part-2/</guid>
      <description>&lt;p&gt;This is the second post in a series of two post detailing the steps that I took to install Kubeapps running on a TKG 1.3 cluster on AWS configured to allow user authentication via the TKG identity management:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The first post focuses on the &lt;a href=&#34;https://liveandletlearn.net/post/kubeapps-on-tanzu-kubernetes-grid-13/&#34;&gt;TKG 1.3 setup required to get a workload clusters with identity management&lt;/a&gt; (using your chosen identity provider),&lt;/li&gt;&#xA;&lt;li&gt;This followup post details the related Kubeapps installation and configuration on the TKG 1.3 workload cluster.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The details below assume that you&amp;rsquo;ve already successfully created your TKG management and workload clusters configured with identity management and verified that you can authenticate with both clusters using your identity provider (ie. not admin credentials).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tanzu Kubernetes Grid 1.3 with Identity Management</title>
      <link>https://liveandletlearn.net/post/kubeapps-on-tanzu-kubernetes-grid-13/</link>
      <pubDate>Mon, 19 Apr 2021 06:42:43 +1000</pubDate>
      <guid>https://liveandletlearn.net/post/kubeapps-on-tanzu-kubernetes-grid-13/</guid>
      <description>&lt;p&gt;Way back in 2020 I&amp;rsquo;d detailed how I&amp;rsquo;d setup a &lt;a href=&#34;https://liveandletlearn.net/post/tanzu-kubernetes-grid-tkg-first-experience/&#34;&gt;Tanzu Kubernetes Grid 1.1 management cluster with OpenID Connect support&lt;/a&gt; (for single sign-on) before installing &lt;a href=&#34;https://liveandletlearn.net/post/kubeapps-on-tkg-management-cluster/&#34;&gt;Kubeapps with single sign-on on that management cluster&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Recently TKG 1.3 was released and the identity management support in TKG has changed significantly, so it&amp;rsquo;s time to see what&amp;rsquo;s different when setting up a TKG cluster with identity management as well as how we can run Kubeapps on TKG 1.3 with identity management. You will of course need to work through the &lt;a href=&#34;https://docs.vmware.com/en/VMware-Tanzu-Kubernetes-Grid/1.3/vmware-tanzu-kubernetes-grid-13/GUID-index.html&#34;&gt;TKG 1.3 documentation for your environment&lt;/a&gt;, I&amp;rsquo;ll just highlight the significant points and small issues that I needed to work around, due to my environment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubeapps on Tanzu Mission Control via Pinniped</title>
      <link>https://liveandletlearn.net/post/kubeapps-on-tanzu-mission-control/</link>
      <pubDate>Thu, 25 Feb 2021 11:40:02 +1100</pubDate>
      <guid>https://liveandletlearn.net/post/kubeapps-on-tanzu-mission-control/</guid>
      <description>&lt;p&gt;We&amp;rsquo;ve been able to run &lt;a href=&#34;https://liveandletlearn.net/post/kubeapps-on-tkg-management-cluster/&#34;&gt;Kubeapps in a multi-cluster setup on various Kubernetes clusters&lt;/a&gt; for a while now, but this was dependent on the Kubeapps&amp;rsquo; user being authenticated in a way that all the clusters trust. Up until now, this meant having all the clusters &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/authentication/#configuring-the-api-server&#34;&gt;configured to trust the same OIDC identity provider&lt;/a&gt;, which is not possible in some Kubernetes environments.&lt;/p&gt;&#xA;&lt;p&gt;Particularly, this meant we were unable to demonstrate multi-cluster Kubeapps with clusters created by &lt;a href=&#34;https://tanzu.vmware.com/mission-control&#34;&gt;Tanzu Mission Control&lt;/a&gt; since we can&amp;rsquo;t specify API server options, such as OIDC configuration, when creating a cluster in TMC. But that requirement has now changed thanks to a new project called &lt;a href=&#34;https://pinniped.dev/&#34;&gt;Pinniped&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Carvel kbld With Helm Post Render</title>
      <link>https://liveandletlearn.net/post/carvel-imgbld-with-helm-post-render/</link>
      <pubDate>Tue, 02 Feb 2021 15:24:29 +1100</pubDate>
      <guid>https://liveandletlearn.net/post/carvel-imgbld-with-helm-post-render/</guid>
      <description>&lt;p&gt;For the past couple of years I&amp;rsquo;ve been working on the &lt;a href=&#34;https://kubeapps.com/&#34;&gt;Kubeapps project&lt;/a&gt;, which until recently has been a UI dashboard for the &lt;a href=&#34;https://helm.sh/&#34;&gt;Helm project&lt;/a&gt; - providing a simple, web-based UI to deploy applications on &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m currently looking at generalising Kubeapps to support other Kubernetes packages formats, including &lt;a href=&#34;https://carvel.dev/&#34;&gt;Carvel&lt;/a&gt; from VMware of course. So I set out today to start learning more about Carvel, which in contrast to more monolithic tools like Helm, provides &amp;ldquo;a set of single-purpose, composable tools that aid in your application building, configuration and deployment to Kubernetes&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;As an example of that composability, I found I can deploy a helm chart using a set of immutable images by utilizing Helm&amp;rsquo;s new-ish support for &lt;a href=&#34;https://helm.sh/docs/topics/advanced/#post-rendering&#34;&gt;post rendering of a chart&lt;/a&gt;. Here&amp;rsquo;s how&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is Kubeapps</title>
      <link>https://liveandletlearn.net/post/what-is-kubeapps/</link>
      <pubDate>Mon, 28 Sep 2020 10:06:28 +1000</pubDate>
      <guid>https://liveandletlearn.net/post/what-is-kubeapps/</guid>
      <description>&lt;p&gt;For over a year now I&amp;rsquo;ve been working together with&#xA;&lt;a href=&#34;https://github.com/andresmgot&#34;&gt;Andres&lt;/a&gt; on the Kubeapps project at VMware&#xA;and have made various videos of new features that we&amp;rsquo;ve worked on, but I&amp;rsquo;ve&#xA;never stepped back to give an overview and answer the more general question,&#xA;&amp;ldquo;What is Kubeapps?&amp;rdquo; and show how those features work towards a single goal.&lt;/p&gt;&#xA;&lt;p&gt;The goal of Kubeapps is to &lt;strong&gt;help users and operators install and manage&#xA;applications on Kubernetes&lt;/strong&gt; and the following features work together to&#xA;achieve this goal:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubeapps on a TKG Management Cluster</title>
      <link>https://liveandletlearn.net/post/kubeapps-on-tkg-management-cluster/</link>
      <pubDate>Wed, 23 Sep 2020 11:01:36 +1000</pubDate>
      <guid>https://liveandletlearn.net/post/kubeapps-on-tkg-management-cluster/</guid>
      <description>&lt;p&gt;This is part two of a series detailing the steps required to run &lt;a href=&#34;https://kubeapps.com&#34;&gt;Kubeapps&lt;/a&gt; on a &lt;a href=&#34;https://tanzu.vmware.com/kubernetes-grid&#34;&gt;VMware TKG&lt;/a&gt; management cluster (on AWS) configured to allow users to deploy applications to multiple&#xA;workload clusters, using the new multicluster support in Kubeapps. Though details will differ, a similar configuration works on other non-TKG multicluster setups as well.&lt;/p&gt;&#xA;&lt;p&gt;The first post described &lt;a href=&#34;https://liveandletlearn.net/post/tanzu-kubernetes-grid-tkg-first-experience/&#34;&gt;setting up your VMware TKG management cluster with two OpenIDConnect-enabled workload clusters&lt;/a&gt;. This post assumes you have your TKG environment setup as described there and focuses on the Kubeapps installation and configuration. The following video demos the result: &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/pzVMZGTK0vU?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VMware Tanzu Kubernetes Grid (TKG) with OpenID Connect - First Experience</title>
      <link>https://liveandletlearn.net/post/tanzu-kubernetes-grid-tkg-first-experience/</link>
      <pubDate>Tue, 22 Sep 2020 10:01:03 +1000</pubDate>
      <guid>https://liveandletlearn.net/post/tanzu-kubernetes-grid-tkg-first-experience/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/andresmgot&#34;&gt;Andres&lt;/a&gt; and I have been doing quite a bit of&#xA;feature work in &lt;a href=&#34;https://kubeapps.com/&#34;&gt;Kubeapps&lt;/a&gt; over the past months at VMware and&#xA;one of the key features that I&amp;rsquo;ve been working on personally is enabling&#xA;Kubeapps users to deploy applications not only on the cluster on which&#xA;Kubeapps is installed, but to multiple other clusters as well.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://liveandletlearn.net/img/kubeapps-on-tkg-management-cluster/kubeapps-multicluster.png&#34; alt=&#34;The new Kubeapps UI with Multicluster support&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Enter &lt;a href=&#34;https://tanzu.vmware.com/kubernetes-grid&#34;&gt;VMware Tanzu Kubernetes Grid&lt;/a&gt;&#xA;(TGK): an &amp;ldquo;Enterprise-ready Kubernetes runtime which streamlines operations&#xA;across multi-cloud infrastructure&amp;rdquo;, so naturally I was keen to test out&#xA;running Kubeapps on TKG and deploying applications to a set of TKG-managed clusters.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
